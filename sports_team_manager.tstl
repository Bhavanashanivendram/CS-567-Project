# TSTL Script for Testing sports_team_manager.py

# Import the required modules
import sports_team_manager

# Define the model
MODEL = sports_team_manager

# Set up the state model
def state_model():
    # Initialize the state
    state = {}

    # Define the state variables
    state['teams'] = {}

    return state

# Define actions
def actions(state):
    # Create a new team
    if len(state['teams']) < 3:
        sports_team_manager.create_team("Team" + str(len(state['teams']) + 1))

    # Delete an existing team
    if state['teams']:
        teams = list(state['teams'].keys())
        sports_team_manager.delete_team(teams[0])

    # Add a player to an existing team
    if state['teams']:
        teams = list(state['teams'].keys())
        team_name = teams[0]
        player = sports_team_manager.Player("Player", 20, "Forward", {"goals": 5, "assists": 3})
        sports_team_manager.add_player_to_team(team_name, player)

    # Remove a player from an existing team
    if state['teams']:
        teams = list(state['teams'].keys())
        team_name = teams[0]
        sports_team_manager.remove_player_from_team(team_name, "Player")

    # Get statistics of an existing team
    if state['teams']:
        teams = list(state['teams'].keys())
        team_name = teams[0]
        sports_team_manager.get_team_stats(team_name)

# Generate the TSTL test harness
def make():
    # Create the test harness
    harness = sports_team_manager

    # Return the test harness
    return harness
